[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mauricio Vargas Sepulveda. Author, maintainer. Tabler. Contributor, copyright holder.           Tabler Dashboard","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vargas Sepulveda M (2025). tabler: Create Dashboards 'Tabler' 'Shiny'. R package version 0.1.0, https://github.com/pachadotdev/tabler.","code":"@Manual{,   title = {tabler: Create Dashboards with 'Tabler' and 'Shiny'},   author = {Mauricio {Vargas Sepulveda}},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/pachadotdev/tabler}, }"},{"path":"/index.html","id":"tabler-dashboard-for-shiny","dir":"","previous_headings":"","what":"Create Dashboards with Tabler and Shiny","title":"Create Dashboards with Tabler and Shiny","text":"modern dashboard framework R Shiny using beautiful Tabler Bootstrap theme.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Dashboards with Tabler and Shiny","text":"","code":"# using the R-Universe install.packages(\"tabler\", repos = \"https://pachadotdev.r-universe.dev\")  # or using the remotes package remotes::install_github(\"pachadotdev/tabler\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Create Dashboards with Tabler and Shiny","text":"Please see documentation: https://pacha.dev/tabler/ See examples directory GitHub repository complete examples: Shiny app layouts: https://github.com/pachadotdev/tabler/blob/main/examples/example_app.R Shiny app layouts using Golem: https://github.com/pachadotdev/tabler/tree/main/examples/tablerdemo ’s simple example using Palmer Penguins dataset:","code":"library(shiny) library(tabler) library(highcharter) library(palmerpenguins)  ui <- tabler_page(   title = \"Palmer Penguins Dashboard\",   navbar = tabler_navbar(title = \"Penguin Analytics\"),   body = tabler_body(     tabler_page_header(       title = \"Dashboard Overview\",       subtitle = \"Explore penguin data with interactive visualizations\"     ),     fluidRow(       tabler_value_box(         value = \"344\",         title = \"Total Penguins\",         icon = \"users\",         color = \"primary\",         width = 3       ),       tabler_value_box(         value = \"3\",         title = \"Species\",         icon = \"star\",         color = \"success\",         width = 3       )     ),     fluidRow(       column(         12,         tabler_card(           title = \"Body Mass Distribution\",           highchartOutput(\"mass_plot\"),           status = \"primary\"         )       )     )   ),   footer = tabler_footer(     left = \"© 2025 Pacha\",     right = \"Built with Tabler\"   ) )  server <- function(input, output, session) {   output$mass_plot <- renderHighchart({     penguins_clean <- na.omit(palmerpenguins::penguins)          d <- data_to_boxplot(penguins_clean, body_mass_g, species)          highchart() %>%       hc_add_series_list(d) %>%       hc_xAxis(type = \"category\") %>%       hc_yAxis(title = list(text = \"Body Mass (g)\"))   }) }  shinyApp(ui, server)"},{"path":"/index.html","id":"available-layouts","dir":"","previous_headings":"","what":"Available Layouts","title":"Create Dashboards with Tabler and Shiny","text":"examples use basic structure Quick Start example . key differences layout:","code":""},{"path":"/index.html","id":"boxed-layout-default","dir":"","previous_headings":"Available Layouts","what":"Boxed Layout (Default)","title":"Create Dashboards with Tabler and Shiny","text":"Basic dashboard top navbar constrained width content area. default layout shown Quick Start example.","code":"ui <- tabler_page(   title = \"Boxed Layout\",   layout = \"boxed\",  # This is the default   navbar = tabler_navbar(title = \"Palmer Penguins\"),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"combo-layout","dir":"","previous_headings":"Available Layouts","what":"Combo Layout","title":"Create Dashboards with Tabler and Shiny","text":"Combines vertical sidebar navigation top header. Uses list top side components.","code":"ui <- tabler_page(   title = \"Combo Layout\",   layout = \"combo\",   navbar = list(     top = tabler_navbar(title = \"Palmer Penguins\"),     side = tabler_sidebar(       title = \"Navigation\",       sidebar_menu(         menu_item(\"Overview\", tabName = \"overview\", icon = \"home\"),         menu_item(\"Species\", tabName = \"species\", icon = \"star\")       ),       theme = \"dark\"     )   ),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"condensed-layout","dir":"","previous_headings":"Available Layouts","what":"Condensed Layout","title":"Create Dashboards with Tabler and Shiny","text":"Compact layout reduced spacing - body class applied.","code":"ui <- tabler_page(   title = \"Condensed Layout\",   layout = \"condensed\",  # Only change needed   navbar = tabler_navbar(title = \"Palmer Penguins\"),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"fluid-layout","dir":"","previous_headings":"Available Layouts","what":"Fluid Layout","title":"Create Dashboards with Tabler and Shiny","text":"Full-width layout without container constraints.","code":"ui <- tabler_page(   title = \"Fluid Layout\",   layout = \"fluid\",  # Content expands to full browser width   navbar = tabler_navbar(title = \"Palmer Penguins\"),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"fluid-vertical-layout","dir":"","previous_headings":"Available Layouts","what":"Fluid Vertical Layout","title":"Create Dashboards with Tabler and Shiny","text":"Full-width layout vertical sidebar.","code":"ui <- tabler_page(   title = \"Fluid Vertical Layout\",   layout = \"fluid-vertical\",   navbar = tabler_sidebar(  # Sidebar instead of navbar     title = \"My Dashboard\",     sidebar_menu(       menu_item(\"Dashboard\", icon = \"home\"),       menu_item(\"Analysis\", icon = \"chart-bar\")     ),     theme = \"dark\"   ),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"horizontal-layout","dir":"","previous_headings":"Available Layouts","what":"Horizontal Layout","title":"Create Dashboards with Tabler and Shiny","text":"Layout horizontal navigation menu.","code":"ui <- tabler_page(   title = \"Horizontal Layout\",   layout = \"horizontal\",   navbar = horizontal_menu( # Horizontal menu instead of navbar     menu_item(\"Overview\", icon = \"home\"),     menu_item(\"Species\", icon = \"star\"),     menu_item(\"Analysis\", icon = \"chart-bar\")   ),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"navbar-dark-layout","dir":"","previous_headings":"Available Layouts","what":"Navbar Dark Layout","title":"Create Dashboards with Tabler and Shiny","text":"Layout dark navbar theme.","code":"ui <- tabler_page(   title = \"Dark Navbar Layout\",   layout = \"navbar-dark\",  # Dark-themed navbar   navbar = tabler_navbar(title = \"Palmer Penguins\"),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"navbar-overlap-layout","dir":"","previous_headings":"Available Layouts","what":"Navbar Overlap Layout","title":"Create Dashboards with Tabler and Shiny","text":"Layout content overlaps navbar modern look.","code":"ui <- tabler_page(   title = \"Navbar Overlap Layout\",   layout = \"navbar-overlap\",  # Content overlaps with dark navbar   navbar = tabler_navbar(title = \"Palmer Penguins\"),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"navbar-sticky-layout","dir":"","previous_headings":"Available Layouts","what":"Navbar Sticky Layout","title":"Create Dashboards with Tabler and Shiny","text":"Layout sticky/fixed navbar stays top scrolling.","code":"ui <- tabler_page(   title = \"Sticky Navbar Layout\",   layout = \"navbar-sticky\",  # Navbar stays fixed when scrolling   navbar = tabler_navbar(title = \"Palmer Penguins\"),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"rtl-layout","dir":"","previous_headings":"Available Layouts","what":"RTL Layout","title":"Create Dashboards with Tabler and Shiny","text":"Right--left layout Arabic/Hebrew languages.","code":"ui <- tabler_page(   title = \"RTL Layout\",   layout = \"rtl\",  # Right-to-left for Arabic/Hebrew   navbar = tabler_navbar(title = \"פריסת RTL\"),   body = tabler_body(...),   footer = tabler_footer(     left = \"© 2025 החברה שלי\",     right = \"נבנה עם Tabler\"   ) )"},{"path":"/index.html","id":"vertical-layout","dir":"","previous_headings":"Available Layouts","what":"Vertical Layout","title":"Create Dashboards with Tabler and Shiny","text":"Pure vertical sidebar layout without top navbar.","code":"ui <- tabler_page(   title = \"Vertical Layout\",   layout = \"vertical\",   navbar = tabler_sidebar(  # Sidebar instead of navbar     title = \"Palmer Penguins\",     sidebar_menu(       menu_item(\"Dashboard\", icon = \"home\"),       menu_item(\"Species\", icon = \"chart-bar\"),       menu_item(\"Islands\", icon = \"map-pin\")     ),     theme = \"dark\"   ),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"vertical-right-layout","dir":"","previous_headings":"Available Layouts","what":"Vertical Right Layout","title":"Create Dashboards with Tabler and Shiny","text":"Vertical sidebar positioned right side.","code":"ui <- tabler_page(   title = \"Vertical Right Layout\",   layout = \"vertical-right\",  # Sidebar on the right   navbar = tabler_sidebar(     title = \"My Dashboard\",     sidebar_menu(       menu_item(\"Dashboard\", icon = \"home\"),       menu_item(\"Analysis\", icon = \"chart-bar\")     ),     theme = \"dark\"   ),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":"/index.html","id":"vertical-transparent-layout","dir":"","previous_headings":"Available Layouts","what":"Vertical Transparent Layout","title":"Create Dashboards with Tabler and Shiny","text":"Vertical layout transparent/semi-transparent sidebar.","code":"ui <- tabler_page(   title = \"Vertical Transparent Layout\",   layout = \"vertical-transparent\",  # Transparent sidebar   navbar = tabler_sidebar(     title = \"My Dashboard\",     sidebar_menu(       menu_item(\"Dashboard\", icon = \"home\"),       menu_item(\"Analysis\", icon = \"chart-bar\")     ),     theme = \"light\"  # Light theme for transparency   ),   body = tabler_body(...),   footer = tabler_footer(...) )"},{"path":[]},{"path":"/index.html","id":"sidebar","dir":"","previous_headings":"Navigation Components","what":"Sidebar","title":"Create Dashboards with Tabler and Shiny","text":"sidebar can used vertical layouts combo layouts:","code":"# For vertical layouts - pass to navbar parameter ui <- tabler_page(   layout = \"vertical\",   navbar = tabler_sidebar(     title = \"My Dashboard\",     sidebar_menu(       menu_item(\"Overview\", tabName = \"overview\", icon = \"home\"),       menu_item(\"Species\", tabName = \"species\", icon = \"star\", badge = \"3\"),       menu_item(\"Islands\", tabName = \"islands\", icon = \"map-pin\")     ),     theme = \"dark\"  # or \"light\"   ),   body = tabler_body(...) )  # For combo layout - pass as part of list ui <- tabler_page(   layout = \"combo\",   navbar = list(     top = tabler_navbar(title = \"My App\"),     side = tabler_sidebar(       title = \"Navigation\",       sidebar_menu(         menu_item(\"Dashboard\", icon = \"home\")       ),       theme = \"dark\"     )   ),   body = tabler_body(...) )"},{"path":"/index.html","id":"horizontal-menu","dir":"","previous_headings":"Navigation Components","what":"Horizontal Menu","title":"Create Dashboards with Tabler and Shiny","text":"horizontal layouts, use horizontal_menu():","code":"ui <- tabler_page(   layout = \"horizontal\",   navbar = horizontal_menu(     menu_item(\"Home\", icon = \"home\"),     menu_item(\"Analytics\", icon = \"chart-bar\"),     menu_item(\"Settings\", icon = \"settings\")   ),   body = tabler_body(...) )"},{"path":"/index.html","id":"navigation-items","dir":"","previous_headings":"Navigation Components","what":"Navigation Items","title":"Create Dashboards with Tabler and Shiny","text":"","code":"menu_item(   text = \"Dashboard\",   tabName = \"dashboard\",  # For tab switching   icon = \"home\",          # Icon name (Tabler Icons)   href = \"/dashboard\",    # Alternative to tabName     badge = \"New\"           # Optional badge text )"},{"path":"/index.html","id":"layout-structure","dir":"","previous_headings":"","what":"Layout Structure","title":"Create Dashboards with Tabler and Shiny","text":"package automatically handles HTML structure layout type using smart navbar parameter accepts different component types: Boxed/Condensed/Fluid: Pass tabler_navbar() navbar parameter Vertical layouts: Pass tabler_sidebar() navbar parameter Combo: Pass list(top = tabler_navbar(...), side = tabler_sidebar(...)) navbar Horizontal: Pass horizontal_menu() navbar parameter system automatically detects component type HTML tag: <aside> tag - sidebar component <header> tag - top navbar component <ul> tag - horizontal menu component","code":""},{"path":"/index.html","id":"css-classes-applied","dir":"","previous_headings":"","what":"CSS Classes Applied","title":"Create Dashboards with Tabler and Shiny","text":"Different layouts apply specific CSS classes body element: layout-boxed: Boxed layout constrained width layout-fluid: Fluid layout (full width), also used fluid-vertical layout-navbar-overlap: Navbar overlap layout layout-navbar-sticky: Sticky navbar layout layout-vertical-transparent: Transparent vertical sidebar data-bs-theme=\"dark\": Applied navbar/sidebar dark theme","code":""},{"path":"/index.html","id":"api-design","dir":"","previous_headings":"","what":"API Design","title":"Create Dashboards with Tabler and Shiny","text":"simplified API uses single navbar parameter:","code":"# Most layouts (boxed, condensed, fluid, etc.) tabler_page(   layout = \"boxed\",   navbar = tabler_navbar(title = \"My App\"),   body = tabler_body(...) )  # Vertical layouts tabler_page(   layout = \"vertical\",   navbar = tabler_sidebar(sidebar_menu(...)),   body = tabler_body(...) )  # Horizontal layout tabler_page(   layout = \"horizontal\",   navbar = horizontal_menu(menu_item(...)),   body = tabler_body(...) )  # Combo layout (both navbar and sidebar) tabler_page(   layout = \"combo\",   navbar = list(     top = tabler_navbar(title = \"My App\"),     side = tabler_sidebar(sidebar_menu(...))   ),   body = tabler_body(...) )"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Create Dashboards with Tabler and Shiny","text":"Apache License (>= 2)","code":""},{"path":"/reference/add_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Tabler Dependencies — add_deps","title":"Add Tabler Dependencies — add_deps","text":"Attach necessary CSS JavaScript dependencies Tabler dashboard","code":""},{"path":"/reference/add_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Tabler Dependencies — add_deps","text":"","code":"add_deps(tag, layout = \"default\")"},{"path":"/reference/add_deps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Add Tabler Dependencies — add_deps","text":"https://github.com/tabler/","code":""},{"path":"/reference/add_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Tabler Dependencies — add_deps","text":"tag HTML tag object attach dependencies layout Layout type (RTL-specific CSS)","code":""},{"path":"/reference/add_deps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Tabler Dependencies — add_deps","text":"HTML tag dependencies attached","code":""},{"path":"/reference/get_layout_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get layout-specific body attributes — get_layout_attributes","title":"Get layout-specific body attributes — get_layout_attributes","text":"Determine body classes attributes based layout","code":""},{"path":"/reference/get_layout_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get layout-specific body attributes — get_layout_attributes","text":"","code":"get_layout_attributes(layout)"},{"path":"/reference/get_layout_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get layout-specific body attributes — get_layout_attributes","text":"layout Layout type","code":""},{"path":"/reference/get_layout_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get layout-specific body attributes — get_layout_attributes","text":"list body attributes","code":""},{"path":"/reference/get_layout_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Get layout-specific page structure — get_layout_structure","title":"Get layout-specific page structure — get_layout_structure","text":"Build HTML structure based layout type","code":""},{"path":"/reference/get_layout_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get layout-specific page structure — get_layout_structure","text":"","code":"get_layout_structure(layout, navbar, body, footer)"},{"path":"/reference/get_layout_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get layout-specific page structure — get_layout_structure","text":"layout Layout type navbar Navbar component body Body content footer Footer component","code":""},{"path":"/reference/get_layout_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get layout-specific page structure — get_layout_structure","text":"Shiny tag representing page structure","code":""},{"path":"/reference/icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabler Icons Data — icons","title":"Tabler Icons Data — icons","text":"dataset containing Tabler icon names categories.","code":""},{"path":"/reference/icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabler Icons Data — icons","text":"","code":"icons"},{"path":"/reference/icons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tabler Icons Data — icons","text":"data frame 6,019 rows 3 variables: root root category icon (e.g., \"arrow/arrows\", \"brand\", \"device\", etc.) icon full icon name (e.g., \"arrow-\", \"arrow-\", \"circle-arrow-\", \"circle-arrow--filled\", etc.) filled Logical indicating whether icon filled .","code":""},{"path":"/reference/icons.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tabler Icons Data — icons","text":"Derived icons https://github.com/tabler/tabler-icons","code":""},{"path":"/reference/icons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabler Icons Data — icons","text":"","code":"icons[grepl(\"paw\", icons$icon), ] #> # A tibble: 3 × 3 #>   root  icon       filled #>   <fct> <chr>      <lgl>  #> 1 paw   paw        FALSE  #> 2 paw   paw-filled TRUE   #> 3 paw   paw-off    FALSE"},{"path":"/reference/shiny-components.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Tabler Card — tabler_card","title":"Create a Tabler Card — tabler_card","text":"Build modern card component optional header, body, footer Display key metric value prominently Display icon Tabler Icons icon libraries Display important messages users Create interactive buttons Tabler styling","code":""},{"path":"/reference/shiny-components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Tabler Card — tabler_card","text":"","code":"tabler_card(..., title = NULL, footer = NULL, status = NULL, class = NULL)  tabler_value_box(value, title, icon = NULL, color = \"primary\", width = 3)  tabler_icon(name, library = \"tabler\", class = NULL)  tabler_alert(..., type = \"info\", dismissible = FALSE, title = NULL)  tabler_button(   label,   onclick = NULL,   color = \"primary\",   size = \"md\",   outline = FALSE,   icon = NULL,   ... )"},{"path":"/reference/shiny-components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Tabler Card — tabler_card","text":"... Additional HTML attributes title Alert title (optional) footer Card footer content (optional) status Card color status: \"primary\", \"secondary\", \"success\", \"warning\", \"danger\", etc. class Additional CSS classes value Main value display icon Icon include color Button color theme width Column width (1-12) name Icon name library Icon library: \"tabler\", \"bootstrap\", \"feather\" type Alert type: \"info\", \"success\", \"warning\", \"danger\" dismissible Whether alert can dismissed label Button text onclick JavaScript execute click size Button size: \"sm\", \"md\", \"lg\" outline Use outline style","code":""},{"path":"/reference/shiny-components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Tabler Card — tabler_card","text":"Shiny tag representing card Shiny tag representing value box Shiny tag representing icon Shiny tag representing alert Shiny tag representing button","code":""},{"path":"/reference/shiny-page.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Tabler Dashboard Page — tabler_page","title":"Create a Tabler Dashboard Page — tabler_page","text":"Main function create complete dashboard page Tabler theme Container dashboard content Displays prominent title subtitle top page Top navigation bar dashboard Footer dashboard Vertical sidebar navigation Container navigation items sidebar Container navigation items horizontal layout Individual navigation item sidebar Container multiple tab panels tabbed layouts Individual tab panel content","code":""},{"path":"/reference/shiny-page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Tabler Dashboard Page — tabler_page","text":"","code":"tabler_page(   title = NULL,   navbar = NULL,   body = NULL,   footer = NULL,   layout = \"boxed\" )  tabler_body(..., class = NULL)  tabler_page_header(title, subtitle = NULL, ...)  tabler_navbar(title = NULL, brand_image = NULL, ...)  tabler_footer(left = NULL, right = NULL)  tabler_sidebar(..., title = NULL, brand_image = NULL, theme = \"dark\")  sidebar_menu(...)  horizontal_menu(...)  menu_item(text, tab_name = NULL, icon = NULL, href = NULL, badge = NULL)  tabler_tab_items(...)  tabler_tab_item(tab_name, ...)"},{"path":"/reference/shiny-page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Tabler Dashboard Page — tabler_page","text":"title Brand title/text sidebar header navbar Dashboard navbar/menu. Can : - `tablerNavbar()` top navigation bar (layouts) - `tablerSidebar()` vertical sidebar (vertical layouts) - `horizontalMenu()` horizontal menu (horizontal layout ) body Dashboard body content footer Dashboard footer (optional) layout Layout type: \"boxed\", \"combo\", \"condensed\", \"fluid\", \"fluid-vertical\", \"horizontal\", \"navbar-dark\", \"navbar-overlap\", \"navbar-sticky\", \"rtl\", \"vertical\", \"vertical-right\", \"vertical-transparent\" ... Content tab class Additional CSS classes subtitle Optional subtitle description brand_image URL path brand image left Left-aligned content right Right-aligned content theme Sidebar theme: \"light\" \"dark\" text Item text/label tab_name Unique identifier tab (must match menuItem tab_name) icon Icon name (optional) href Link URL (optional, alternative tab_name) badge Badge text (optional)","code":""},{"path":"/reference/shiny-page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Tabler Dashboard Page — tabler_page","text":"HTML tag dependencies attached Shiny tag representing body Shiny tag representing page header Shiny tag representing navbar Shiny tag representing footer Shiny tag representing sidebar Shiny tag representing sidebar menu Shiny tag representing horizontal menu Shiny tag representing menu item Shiny tag representing tab items container Shiny tag representing tab item","code":""},{"path":"/reference/shiny-page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Tabler Dashboard Page — tabler_page","text":"","code":"ui <- tabler_page(   title = \"Combo Dashboard\",   layout = \"combo\",   navbar = list(     top = tabler_navbar(title = \"My App\"),     side = tabler_sidebar(       sidebar_menu(         menu_item(\"Dogs\", icon = \"dog\"),         menu_item(\"Cats\", icon = \"cat\")       )     )   ),   body = tabler_body(\"Welcome to Tabler!\") )  server <- function(input, output, session) {}  # shiny::shinyApp(ui, server)"},{"path":"/reference/tabler-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tabler: Create Dashboards with 'Tabler' and 'Shiny' — tabler-package","title":"tabler: Create Dashboards with 'Tabler' and 'Shiny' — tabler-package","text":"Provides functions build interactive dashboards combining 'Tabler UI Kit' 'Shiny', making easy create professional-looking web applications. 'Tabler' fully responsive compatible modern browsers. Offers customizable layouts components built 'HTML5' 'CSS3'. underlying 'Tabler' (<https:github.com/tabler/tabler>) 'Tabler Icons' (<https:github.com/tabler/tabler-icons>) pre-built source eliminate need 'Node.js' 'NPM' package installation.","code":""},{"path":[]},{"path":"/reference/tabler-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tabler: Create Dashboards with 'Tabler' and 'Shiny' — tabler-package","text":"Maintainer: Mauricio Vargas Sepulveda m.vargas.sepulveda@gmail.com contributors: Tabler (Tabler Dashboard) [contributor, copyright holder]","code":""}]
